import React from 'react'
import Head from 'next/head'
import styles from '../styles/Home.module.scss'
import { getLocation, getProduct } from '../lib/api'
import DatePickerBox from '../component/DatePickerBox'
import ModalBox from '../component/ModalBox'
import Button from '../component/Button'
import Dropdown from '../component/Dropdown'
import Input from '../component/Input'
import useHome from "../hook/useHome";

export default function Home({ products, locations }) {

  const useHomeProps = useHome({
    products
  });

  const {
    items,
    setItems,
    updateItem,
    selectedProduct,
    setSelectedProduct,
    selectedDate,
    setSelectedDate,
    totalUnit,
    totalCost,
    dropdownItems,
    modalIsOpen,
    openModal,
    closeModal,
    removeItem,
    ErrorMessage,
    submitForm,
  } = useHomeProps;

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.mainbox}>
          <h1>Calculator</h1>
          <form>
            <div className={styles.flexbox}>
              <div>Product</div>
              <div>
                <Dropdown defaultValue={products[0]} onChange={e => setSelectedProduct(products.filter(product => parseInt(product.id) === parseInt(e.target.value))[0])} items={dropdownItems} />
              </div>
            </div>
            <div className={styles.flexbox}>
              <div>
                Date
              </div>
              <div>
                <DatePickerBox selected={selectedDate} onChange={(date) => setSelectedDate(date)} />
              </div>
            </div>
            <div className={styles.flextitle}>
              <div className={styles.flexitem}>
                <div>Locations</div>
              </div>
              <div>
                <div className={styles.flexitem}>
                  <div>
                    <div>
                      Place
                    </div>
                  </div>
                  <div>
                    <div>
                      Units
                    </div>
                  </div>
                  <div>
                    <div>
                      Cost
                    </div>
                  </div>
                  <div>
                    <Button onClick={openModal} label={`Add`} />
                  </div>
                </div>
                {items.map(item => {
                  return <div key={item.id} className={styles.flexitem}>
                    <div>
                      <div>
                        {item.name}
                      </div>
                    </div>
                    <div>
                      <div>
                        <Input type={`text`} defaultValue={item.unit} onChange={e => updateItem(item.id, e.target.value)} />
                      </div>
                    </div>
                    <div>
                      <div>
                        {item.cost}
                      </div>
                    </div>
                    <div>
                      <Button onClick={() => removeItem(item.id)} label={`x`} />
                    </div>
                  </div>
                })}
              </div>
            </div>
            <div className={styles.flexbox}>
              <div>Total Units</div>
              <div>{totalUnit}</div>
            </div>
            <div className={styles.flexbox}>
              <div>Total Cost</div>
              <div>{totalCost}</div>
            </div>
            <div className={styles.flextitle}>
              <div className={styles.flexitem}>
                <Button onClick={() => submitForm()} label={`Submit`} />
              </div>
              <div className={styles.errorMsg}>
                <ErrorMessage />
              </div>
            </div>
          </form>
        </div>
      </main>
      <ModalBox modalIsOpen={modalIsOpen} closeModal={closeModal} locations={locations} setItems={setItems} items={items} selectedProduct={selectedProduct} />
    </div>
  )
}

export async function getServerSideProps() {
  const products = await getProduct();
  const locations = await getLocation();
  return {
    props: {
      products,
      locations
    }
  }
}
